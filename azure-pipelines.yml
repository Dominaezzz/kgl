trigger:
  branches:
    include:
      - '*'
  tags:
    include:
      - '*'

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-16.04'
    mac:
      imageName: 'macos-10.14'
    windows:
      imageName: 'vs2017-win2016'

pool:
  vmImage: $(imageName)

steps:
  - bash: sudo apt install libvulkan-dev build-essential libevent-pthreads-2.0.5 doxygen xorg-dev libglu1-mesa-dev
    condition: eq(variables['Agent.OS'], 'Linux')
    displayName: 'Install GLFW''s build dependencies'

  - bash: |
      git clone https://github.com/glfw/glfw.git
      cd glfw
      cmake .
      make
      sudo make install
      cd ..
    condition: eq(variables['Agent.OS'], 'Linux')
    displayName: 'Build GLFW from source'

  - bash: brew install glfw --HEAD
    condition: eq( variables['Agent.OS'], 'Darwin' )
    displayName: 'Install GLFW'

  - bash: |
      case $THE_OS in
          "Windows_NT")
              choco install ruby python3 make
              gem install asciidoctor
          ;;
          "Linux")
              sudo apt install -y asciidoctor
          ;;
          "Darwin")
              brew install asciidoctor
          ;;
          *) echo "Unknown OS!";;
      esac
    displayName: 'Install build dependencies'
    env:
      THE_OS: $(Agent.OS)

  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      tasks: 'assemble'
    displayName: 'Compile KGL'

  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      tasks: 'check'
    displayName: 'Test KGL'

  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      tasks: 'bintrayUpload'
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
    displayName: 'Publish artifacts to Bintray'
    env:
      BINTRAY_API_KEY: $(BINTRAY_API_KEY)
      BINTRAY_USER: $(BINTRAY_USER)
