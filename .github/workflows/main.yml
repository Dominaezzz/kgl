name: Build

on: [ push, pull_request ]

jobs:
  build:
    name: 'Build'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: 'Build GLFW from source'
        run: |
          sudo apt install libvulkan-dev doxygen xorg-dev libglu1-mesa-dev

          curl -L https://github.com/glfw/glfw/releases/download/3.3/glfw-3.3.zip -s -o glfw-3.3.zip
          unzip glfw-3.3.zip
          cd glfw-3.3
          cmake .
          make
          sudo make install
          cd ..
        if: matrix.os == 'ubuntu-latest'

      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.x'

      - name: 'Install AsciiDoctor'
        run: gem install asciidoctor

      - uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: 'Clone Repo'
        uses: actions/checkout@v1

      - name: 'Build KGL'
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: 'build --stacktrace'

      - name: 'Publish KGL to BinTray'
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: 'smartPublish --stacktrace'
        if: startsWith(github.ref, 'refs/tags/')
        env:
          BINTRAY_API_KEY: ${{ secrets.bintray_api_key }}
          BINTRAY_USER: ${{ secrets.bintray_user }}
